document.addEventListener("DOMContentLoaded", () => {
    const e = document.getElementById("searchInput"),
        t = document.getElementById("categoryFilter"),
        n = document.getElementById("toolsList"),
        o = document.getElementById("pagination"),
        i = document.getElementById("bookmarksList"),
        a = document.getElementById("languageSelect"),
        w = document.getElementById("reviewsList"),
        k = document.getElementById("generateImagesBtn"),
        x = document.getElementById("freeToolsBtn"),
        L = document.getElementById("latestBtn"),
        S = document.getElementById("forYouBtn"),
        C = document.getElementById("trendingBtn"),
        F = document.getElementById("featuredBtn"),
        statsText = document.getElementById("statsText"),
        siteStats = document.getElementById("siteStats"),
        feedbackBtn = document.getElementById("feedbackBtn"),
        loginBtn = document.getElementById("loginBtn"),
        downloadAppBtn = document.getElementById("downloadAppBtn"),
        quickGuideBtn = document.getElementById("quickGuideBtn"),
        dailyTool = document.getElementById("dailyTool"),
        h = document.getElementById("reviewTool"),
        v = document.getElementById("reviewText"),
        b = document.getElementById("reviewRating"),
        y = document.getElementById("submitReviewBtn");

    let T = [], P = 1, A = 9, D = localStorage.getItem("reviews") ? JSON.parse(localStorage.getItem("reviews")) : [], I = localStorage.getItem("submittedTools") ? JSON.parse(localStorage.getItem("submittedTools")) : [];

    // Fungsi animasi counter
    function animateCounter(target, element, initialDuration, interval) {
        let current = 0;
        let isInitial = true;
        const range = target - current;
        const increment = target / (initialDuration / 16);
        const startTime = performance.now();

        function update() {
            const currentTime = performance.now();
            if (isInitial) {
                const progress = Math.min((currentTime - startTime) / initialDuration, 1);
                current = Math.floor(current + range * easeInOutQuad(progress));
                if (progress >= 1) {
                    current = target;
                    isInitial = false;
                    setTimeout(startRandomCounter, interval * 1000);
                }
            } else {
                current += Math.floor(Math.random() * 10) + 1;
            }
            const tasks = Math.floor(current * 0.354).toLocaleString();
            const jobs = Math.floor(current * 0.13).toLocaleString();
            element.textContent = current.toLocaleString() + " AI tools for " + tasks + " tasks and " + jobs + " jobs";
            if (isInitial || !isInitial) requestAnimationFrame(update);
        }

        function easeInOutQuad(t) {
            return t < 0.5 ? 2 * t * t : 1 - Math.pow(-2 * t + 2, 2) / 2;
        }

        function startRandomCounter() {
            setInterval(() => {
                current += Math.floor(Math.random() * 10) + 1;
                const tasks = Math.floor(current * 0.354).toLocaleString();
                const jobs = Math.floor(current * 0.13).toLocaleString();
                element.textContent = current.toLocaleString() + " AI tools for " + tasks + " tasks and " + jobs + " jobs";
            }, interval * 1000);
        }

        requestAnimationFrame(update);
    }

    if (statsText) {
        animateCounter(38345, statsText, 2000, 2);
    }

    fetch("tools.json").then(e => {
        if (!e.ok) throw new Error("Gagal memuat tools.json");
        return e.json();
    }).then(e => {
        T = [...e, ...I];
        const t = new Set(T.map(e => e.category));
        t.forEach(e => {
            const n = document.createElement("option");
            n.value = e, n.textContent = e, t.appendChild(n);
        }), fetch("languages.json").then(e => e.json()).then(e => {
            a.addEventListener("change", t => {
                const n = e[t.target.value];
                document.getElementById("heroText").textContent = n.hero,
                    document.getElementById("taglineText").textContent = n.tagline,
                    document.getElementById("statsText").textContent = n.stats,
                    document.getElementById("rankText").textContent = n.rank,
                    document.getElementById("spotlightText").textContent = n.spotlight,
                    document.getElementById("featuredBtnText").textContent = n.featuredBtn,
                    document.getElementById("releasedText").textContent = n.released,
                    document.getElementById("bookmarksTitle").textContent = n.bookmarks,
                    document.getElementById("reviewsTitle").textContent = n.reviews,
                    document.getElementById("tutorialLink").textContent = n.tutorial,
                    document.getElementById("modeText").textContent = n.mode;
                if (statsText) {
                    animateCounter(38345, statsText, 2000, 2);
                }
            }), a.dispatchEvent(new Event("change"));
        }), M();
    }).catch(e => {
        n.innerHTML = '<p class="error">Error: Gagal memuat data alat AI.</p>', console.error(e);
    });

    function M() {
        n.innerHTML = "", i.innerHTML = "";
        let t = E(),
            o = T.filter(e => !t.value || e.category === t.value).filter(e => e.name.toLowerCase().includes(E().toLowerCase()) || e.description.toLowerCase().includes(E().toLowerCase()) || e.tags.some(t => t.toLowerCase().includes(E().toLowerCase())));
        o.slice((P - 1) * A, P * A).forEach(e => {
            const t = document.createElement("div");
            t.classList.add("tool-card");
            const o = localStorage.getItem("bookmarks")?.split(",").includes(e.id);
            const isFavorite = JSON.parse(localStorage.getItem('favorites') || '[]').includes(e.id);
            t.innerHTML = `<img src="${e.logo}" alt="${e.name} Icon" class="tool-thumbnail"><span class="tool-name">${e.name}</span><span class="tool-category">${e.category}</span><span class="tool-date">${e.date_added}</span><div class="rating">${"‚òÖ".repeat(Math.floor(e.popularity)).padEnd(5, "‚òÜ")}</div><a href="${e.url}" target="_blank" class="tool-link">üåê</a><span class="tool-check ${o ? "tool-bookmark" : ""}" data-id="${e.id}">${o ? "‚≠ê" : "‚úÖ"}</span><span class="quick-favorite" style="color: ${isFavorite ? '#ffca28' : '#ccc'}">‚≠ê</span>`,
                e.tags.forEach(e => {
                    const n = document.createElement("span");
                    n.classList.add("tool-tag"), n.textContent = e, t.appendChild(n);
                }), t.querySelector(".tool-check").addEventListener("click", () => {
                    !o && N(e.id);
                }), t.querySelector('.quick-favorite').addEventListener('click', () => {
                    let favorites = JSON.parse(localStorage.getItem('favorites') || '[]');
                    if (favorites.includes(e.id)) {
                        favorites = favorites.filter(id => id !== e.id);
                        t.querySelector('.quick-favorite').style.color = '#ccc';
                    } else {
                        favorites.push(e.id);
                        t.querySelector('.quick-favorite').style.color = '#ffca28';
                    }
                    localStorage.setItem('favorites', JSON.stringify(favorites));
                }), n.appendChild(t);
        });
        const a = localStorage.getItem("bookmarks")?.split(",").filter(e => e).map(e => T.find(t => t.id === e));
        a.forEach(e => {
            const t = document.createElement("div");
            t.classList.add("tool-card"), t.innerHTML = `<img src="${e.logo}" alt="${e.name} Icon" class="tool-thumbnail"><span class="tool-name">${e.name}</span><span class="tool-category">${e.category}</span><span class="tool-date">${e.date_added}</span><div class="rating">${"‚òÖ".repeat(Math.floor(e.popularity)).padEnd(5, "‚òÜ")}</div><a href="${e.url}" target="_blank" class="tool-link">üåê</a><span class="tool-check tool-bookmark">‚≠ê</span>`,
                e.tags.forEach(e => {
                    const n = document.createElement("span");
                    n.classList.add("tool-tag"), n.textContent = e, t.appendChild(n);
                }), i.appendChild(t);
        });
        o.innerHTML = "", Array.from({ length: Math.ceil(T.length / A) }, (e, t) => t + 1).forEach(e => {
            const t = document.createElement("button");
            t.textContent = e, t.addEventListener("click", () => {
                P = e, M(), t.classList.add("active"), Array.from(o.children).forEach(n => n !== t && n.classList.remove("active"));
            }), e === P && t.classList.add("active"), o.appendChild(t);
        });
        w.innerHTML = "", D.forEach(e => {
            const t = document.createElement("div");
            t.classList.add("review-card"), t.innerHTML = `<p><strong>${e.tool}</strong> - ${e.review} (${e.rating}/5)</p>`, w.appendChild(t);
        });
        Notification.requestPermission().then(e => {
            "granted" === e && new Notification("New Tool Added!", { body: "Check out the latest AI tools on ToolVerse Nesia AI." });
        });

        // Statistik Situs
        if (siteStats) {
            const toolCount = T.length;
            const reviewCount = D.length;
            siteStats.innerHTML = `
                <div class="stat-card">Alat: ${toolCount}</div>
                <div class="stat-card">Ulasan: ${reviewCount}</div>
            `;
        }

        // Alat Terpilih Harian
        if (dailyTool) {
            const lastDate = localStorage.getItem('dailyToolDate');
            const today = new Date().toDateString();
            if (lastDate !== today || !localStorage.getItem('dailyToolId')) {
                const randomTool = T[Math.floor(Math.random() * T.length)];
                localStorage.setItem('dailyToolId', randomTool.id);
                localStorage.setItem('dailyToolDate', today);
                dailyTool.innerHTML = `<div class="daily-tool-card">Alat Terpilih Hari Ini: <span>${randomTool.name}</span></div>`;
            } else {
                const toolId = localStorage.getItem('dailyToolId');
                const tool = T.find(t => t.id === toolId);
                dailyTool.innerHTML = `<div class="daily-tool-card">Alat Terpilih Hari Ini: <span>${tool.name}</span></div>`;
            }
        }
    }

    function E() {
        return e.value || "";
    }

    e.addEventListener("input", M), t.addEventListener("change", M), y.addEventListener("click", () => {
        h.value && v.value && b.value && (D.push({ tool: h.value, review: v.value, rating: b.value }), localStorage.setItem("reviews", JSON.stringify(D)), h.value = "", v.value = "", b.value = "", M());
    });

    const N = e => {
        let t = localStorage.getItem("bookmarks")?.split(",") ?? [];
        t.includes(e) ? t = t.filter(t => t !== e) : (t.push(e), t = t.filter(e => e)), localStorage.setItem("bookmarks", t), M();
    };

    k.addEventListener("click", () => {
        const input = prompt('Masukkan deskripsi gambar:');
        if (input) {
            fetch('https://api.openai.com/v1/images/generations', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'Authorization': `Bearer a1434923-5bad-4a3a-96d6-31331254f66e`
                },
                body: JSON.stringify({
                    prompt: input,
                    n: 1,
                    size: "256x256"
                })
            })
            .then(response => response.json())
            .then(data => {
                if (data.data && data.data[0].url) {
                    const img = document.createElement('img');
                    img.src = data.data[0].url;
                    n.innerHTML = '';
                    n.appendChild(img);
                } else {
                    alert('Gagal menghasilkan gambar, cek prompt atau API.');
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('Gagal menghasilkan gambar, coba lagi nanti.');
            });
        }
    });

    x.addEventListener("click", () => {
        const e = T.filter(e => e.free);
        n.innerHTML = "", e.forEach(e => {
            const t = document.createElement("div");
            t.classList.add("tool-card"), t.innerHTML = `<img src="${e.logo}" alt="${e.name} Icon" class="tool-thumbnail"><span class="tool-name">${e.name}</span><span class="tool-category">${e.category}</span><span class="tool-date">${e.date_added}</span><div class="rating">${"‚òÖ".repeat(Math.floor(e.popularity)).padEnd(5, "‚òÜ")}</div><a href="${e.url}" target="_blank" class="tool-link">üåê</a>`, e.tags.forEach(e => {
                const n = document.createElement("span");
                n.classList.add("tool-tag"), n.textContent = e, t.appendChild(n);
            }), n.appendChild(t);
        }), P = 1, M();
    });

    L.addEventListener("click", () => {
        const e = T.sort((e, t) => new Date(t.date_added) - new Date(e.date_added)).slice(0, 1);
        n.innerHTML = "", e.forEach(e => {
            const t = document.createElement("div");
            t.classList.add("tool-card"), t.innerHTML = `<img src="${e.logo}" alt="${e.name} Icon" class="tool-thumbnail"><span class="tool-name">${e.name}</span><span class="tool-category">${e.category}</span><span class="tool-date">${e.date_added}</span><div class="rating">${"‚òÖ".repeat(Math.floor(e.popularity)).padEnd(5, "‚òÜ")}</div><a href="${e.url}" target="_blank" class="tool-link">üåê</a>`, e.tags.forEach(e => {
                const n = document.createElement("span");
                n.classList.add("tool-tag"), n.textContent = e, t.appendChild(n);
            }), n.appendChild(t);
        }), P = 1, M();
    });

    S.addEventListener("click", () => {
        const e = T.filter(e => e.category === "Personal");
        n.innerHTML = "", e.forEach(e => {
            const t = document.createElement("div");
            t.classList.add("tool-card"), t.innerHTML = `<img src="${e.logo}" alt="${e.name} Icon" class="tool-thumbnail"><span class="tool-name">${e.name}</span><span class="tool-category">${e.category}</span><span class="tool-date">${e.date_added}</span><div class="rating">${"‚òÖ".repeat(Math.floor(e.popularity)).padEnd(5, "‚òÜ")}</div><a href="${e.url}" target="_blank" class="tool-link">üåê</a>`, e.tags.forEach(e => {
                const n = document.createElement("span");
                n.classList.add("tool-tag"), n.textContent = e, t.appendChild(n);
            }), n.appendChild(t);
        }), P = 1, M();
    });

    C.addEventListener("click", () => {
        const e = T.filter(e => e.name.toLowerCase().includes("trending"));
        n.innerHTML = "", e.forEach(e => {
            const t = document.createElement("div");
            t.classList.add("tool-card"), t.innerHTML = `<img src="${e.logo}" alt="${e.name} Icon" class="tool-thumbnail"><span class="tool-name">${e.name}</span><span class="tool-category">${e.category}</span><span class="tool-date">${e.date_added}</span><div class="rating">${"‚òÖ".repeat(Math.floor(e.popularity)).padEnd(5, "‚òÜ")}</div><a href="${e.url}" target="_blank" class="tool-link">üåê</a>`, e.tags.forEach(e => {
                const n = document.createElement("span");
                n.classList.add("tool-tag"), n.textContent = e, t.appendChild(n);
            }), n.appendChild(t);
        }), P = 1, M();
    });

    F.addEventListener('click', () => {
        const featuredTools = T.sort((a, b) => b.popularity - a.popularity).slice(0, 5);
        n.innerHTML = featuredTools.map(tool => `
            <div class="tool-card">
                <img src="${tool.logo}" alt="${tool.name} Icon" class="tool-thumbnail">
                <span class="tool-name">${tool.name}</span>
            </div>
        `).join('');
    });

    // Tombol Menu
    document.querySelector('.menu').addEventListener('click', () => {
        const menu = document.createElement('div');
        menu.innerHTML = '<a href="index.html">Home</a><a href="about.html">Tentang Kami</a><a href="blog.html">Blog</a><a href="contact.html">Contact</a><a href="faq.html">FAQ</a><a href="tutorial.html">Tutorial</a><a href="forum.html">Forum</a><a href="profile.html">Profil</a>';
        menu.classList.add('dropdown-menu');
        document.body.appendChild(menu);
        setTimeout(() => menu.remove(), 5000);
    });

    // Tombol Actions
    document.querySelector('.actions').addEventListener('click', () => {
        alert('Pengaturan: Mode Gelap/Terang (Belum Aktif)');
    });

    // Tombol Spotlight
    document.querySelector('.spotlight-btn').addEventListener('click', () => {
        const spotlightTools = T.sort((a, b) => b.popularity - a.popularity).slice(0, 3);
        alert('Spotlight Tools: ' + spotlightTools.map(t => t.name).join(', '));
    });

    // Tombol Footer
    document.querySelectorAll('.footer-btn').forEach((btn) => {
        btn.addEventListener('click', () => {
            const social = btn.getAttribute('data-social');
            if (social === 'whatsapp') window.location.href = 'https://wa.me/62895354511777';
            if (social === 'chat') window.location.href = 'forum.html';
            if (social === 'website') window.location.href = 'https://x.ai';
        });
    });

    // Form Kontak
    document.getElementById('contactForm')?.addEventListener('submit', (e) => {
        e.preventDefault();
        const name = document.getElementById('contactName').value;
        const email = document.getElementById('contactEmail').value;
        const message = document.getElementById('contactMessage').value;
        const contacts = JSON.parse(localStorage.getItem('contacts') || '[]');
        contacts.push({ name, email, message, date: new Date().toISOString() });
        localStorage.setItem('contacts', JSON.stringify(contacts));
        alert('Pesan berhasil dikirim!');
        e.target.reset();
    });

    // Forum Interaktif
    document.getElementById('forumSubmit')?.addEventListener('click', () => {
        const post = document.getElementById('forumPost').value;
        if (post) {
            const posts = JSON.parse(localStorage.getItem('forumPosts') || '[]');
            posts.push({ text: post, date: new Date().toISOString(), user: 'Anonymous' });
            localStorage.setItem('forumPosts', JSON.stringify(posts));
            document.getElementById('forumPost').value = '';
            renderForumPosts();
        }
    });

    function renderForumPosts() {
        const posts = JSON.parse(localStorage.getItem('forumPosts') || '[]');
        const forumPosts = document.getElementById('forumPosts');
        forumPosts.innerHTML = posts.map(p => `<p>${p.text} <span>${p.date}</span></p>`).join('');
    }
    renderForumPosts();

    // FAQ Interaktif
    const faqs = [
        { question: "Bagaimana cara menggunakan alat ini?", answer: "Pilih alat dari daftar dan klik untuk detail." },
        { question: "Apa yang gratis?", answer: "Cek tab Free Tools untuk alat gratis." }
    ];
    document.getElementById('faqList')?.addEventListener('click', (e) => {
        if (e.target.tagName === 'BUTTON') {
            e.target.nextElementSibling.classList.toggle('show');
        }
    });
    const faqList = document.getElementById('faqList');
    faqList.innerHTML = faqs.map(faq => `
        <div><button>${faq.question}</button><p class="faq-answer">${faq.answer}</p></div>
    `).join('');

    // Login/Logout
    loginBtn?.addEventListener('click', () => {
        const email = prompt('Masukkan email:');
        const password = prompt('Masukkan kata sandi:');
        if (email && password) {
            localStorage.setItem('user', JSON.stringify({ email, loggedIn: true }));
            loginBtn.textContent = 'Logout';
            loginBtn.id = 'logoutBtn';
            document.getElementById('logoutBtn').addEventListener('click', () => {
                localStorage.removeItem('user');
                document.getElementById('logoutBtn').textContent = 'Login';
                document.getElementById('logoutBtn').id = 'loginBtn';
            });
            alert('Login berhasil!');
        }
    });

    // Download App
    downloadAppBtn?.addEventListener('click', () => {
        window.location.href = 'https://play.google.com/store/apps/details?id=com.toolversenesia'; // Ganti dengan tautan resmi
    });

    // Notifikasi
    document.querySelector('.released span:first-child')?.addEventListener('click', () => {
        if (Notification.permission === 'granted') {
            new Notification('Pembaruan!', { body: 'Alat baru telah ditambahkan!' });
        } else if (Notification.permission !== 'denied') {
            Notification.requestPermission().then(permission => {
                if (permission === 'granted') {
                    new Notification('Pembaruan!', { body: 'Alat baru telah ditambahkan!' });
                }
            });
        }
    });

    // Profil Pengguna
    const profileContent = document.getElementById('profileContent');
    if (profileContent) {
        const user = JSON.parse(localStorage.getItem('user'));
        if (user && user.loggedIn) {
            const bookmarks = localStorage.getItem('bookmarks')?.split(',').filter(id => id) || [];
            const reviews = JSON.parse(localStorage.getItem('reviews') || '[]');
            profileContent.innerHTML = `
                <h2>Selamat datang, ${user.email}</h2>
                <h3>Bookmark Anda</h3>
                ${bookmarks.map(id => {
                    const tool = T.find(t => t.id === id);
                    return tool ? `<div class="tool-card"><span>${tool.name}</span></div>` : '';
                }).join('')}
                <h3>Ulasan Anda</h3>
                ${reviews.map(r => `<p>${r.tool} - ${r.review} (${r.rating}/5)</p>`).join('')}
            `;
        } else {
            profileContent.innerHTML = '<p>Silakan login untuk melihat profil.</p>';
        }
    }

    // Feedback
    feedbackBtn?.addEventListener('click', () => {
        const feedback = prompt('Berikan saran atau umpan balik:');
        if (feedback) {
            const feedbacks = JSON.parse(localStorage.getItem('feedbacks') || '[]');
            feedbacks.push({ text: feedback, date: new Date().toISOString() });
            localStorage.setItem('feedbacks', JSON.stringify(feedbacks));
            alert('Terima kasih atas umpan balik Anda!');
        }
    });

    // Panduan Cepat
    quickGuideBtn?.addEventListener('click', () => {
        alert('Panduan Cepat:\n1. Cari alat di kolom pencarian.\n2. Jelajahi kategori dengan tab.\n3. Tambahkan ulasan atau bookmark.');
    });
});
